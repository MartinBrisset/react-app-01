{"version":3,"sources":["components/Cita.js","components/Formulario.js","App.js","reportWebVitals.js","index.js"],"names":["Cita","cita","eliminarCita","className","mascota","propietario","fecha","hora","sintomas","onClick","id","Formulario","crearCita","useState","setCita","error","setError","handleChange","e","target","name","value","onSubmit","preventDefault","trim","uuid","type","placeholder","onChange","App","citasIniciales","JSON","parse","localStorage","getItem","citas","setCitas","useEffect","setItem","stringify","nuevasCitas","filter","titulo","length","map","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.6448edd0.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\nconst Cita = ({cita, eliminarCita}) => {\r\n    return ( \r\n        <div className='cita'>\r\n            <p>Mascota <span>{cita.mascota}</span></p>\r\n            <p>Propietario <span>{cita.propietario}</span></p>\r\n            <p>Fecha <span>{cita.fecha}</span></p>\r\n            <p>Hora <span>{cita.hora}</span></p>\r\n            <p>Sintomas <span>{cita.sintomas}</span></p>\r\n\r\n            <button \r\n                className='button eliminar u-full-width'\r\n                onClick={ () => eliminarCita(cita.id)}\r\n            >\r\n                Eliminar &times;\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nCita.propTypes = {\r\n    cita: PropTypes.object.isRequired,\r\n    eliminarCita: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Cita;","import React, { Fragment, useState } from 'react';\r\nimport {v4 as uuid} from 'uuid'\r\nimport PropTypes from 'prop-types'\r\n\r\n\r\nconst Formulario = ({crearCita}) => {\r\n\r\n    //add state de citas\r\n    const [cita, setCita] = useState({\r\n        mascota: '',\r\n        propietario: '',\r\n        fecha: '',\r\n        hora: '',\r\n        sintomas: ''\r\n    })\r\n\r\n    //state de erros\r\n    const [error, setError] = useState(false)\r\n\r\n    //funcion que se ejecuta cuando el usuario escribe\r\n    const handleChange = (e) => {\r\n        setCita({\r\n            ...cita,\r\n            [e.target.name]: e.target.value\r\n        })\r\n    }\r\n\r\n    //extrar valores\r\n    const { mascota, propietario, fecha, hora, sintomas } = cita\r\n\r\n    //envia formulario\r\n    const submitCita = (e) => {\r\n        e.preventDefault()\r\n\r\n        //validar formulario\r\n        if ( mascota.trim() === '' || propietario.trim() === '' || fecha.trim() === '' || hora.trim() === '' || sintomas.trim() === '' ) {\r\n            setError(true)\r\n            \r\n            return\r\n        }\r\n        //eleminar mensaje previo\r\n        setError(false)\r\n\r\n        //colocar un id para react\r\n        cita.id = uuid()\r\n        \r\n        //crear cita\r\n        crearCita(cita)\r\n\r\n        //reiniciar form\r\n        setCita({\r\n            mascota: '',\r\n            propietario: '',\r\n            fecha: '',\r\n            hora: '',\r\n            sintomas: ''\r\n        })\r\n\r\n\r\n    }\r\n\r\n    return ( \r\n        <Fragment>\r\n            <h2>Crear Cita</h2>\r\n\r\n            { error ? <p className='alerta-error'>Todos los campos son requeridos</p>\r\n                    : null\r\n            }\r\n\r\n            <form\r\n                onSubmit={submitCita}\r\n            >\r\n                <label>Nombre Mascota</label>\r\n                <input \r\n                    type='text'\r\n                    name='mascota'\r\n                    className='u-full-width'\r\n                    placeholder='Nombre Mascota'\r\n                    onChange={handleChange}\r\n                    value={mascota}\r\n                    />\r\n\r\n                <label>Nombre Propietario</label>\r\n                <input \r\n                    type='text'\r\n                    name='propietario'\r\n                    className='u-full-width'\r\n                    placeholder='Nombre Propietario'\r\n                    onChange={handleChange}\r\n                    value={propietario}\r\n                    />\r\n\r\n                <label>Fecha</label>\r\n                <input \r\n                    type='date'\r\n                    name='fecha'\r\n                    className='u-full-width'\r\n                    onChange={handleChange}\r\n                    value={fecha}\r\n                    />\r\n\r\n                <label>Hora</label>\r\n                <input \r\n                    type='time'\r\n                    name='hora'\r\n                    className='u-full-width'\r\n                    onChange={handleChange}\r\n                    value={hora}\r\n                    />\r\n\r\n                <label>SÃ­ntomas</label>\r\n                <textarea\r\n                    className='u-full-width'\r\n                    name='sintomas'\r\n                    onChange={handleChange}\r\n                    value={sintomas}\r\n                ></textarea>\r\n\r\n                <button\r\n                    type='submit'\r\n                    className='u-full-width button-primary'\r\n                >\r\n                    Agregar Cita\r\n                </button>\r\n            </form>\r\n        </Fragment>\r\n    );\r\n}\r\n\r\nFormulario.propTypes = {\r\n    crearCita: PropTypes.func.isRequired\r\n}\r\n \r\nexport default Formulario;","import { useEffect, useState } from \"react\";\nimport Cita from \"./components/Cita\";\nimport Formulario from \"./components/Formulario\";\n\n\n\nfunction App() {\n\n  //citas en local storage\n  let citasIniciales = JSON.parse( localStorage.getItem('citas') )\n  if (!citasIniciales) {\n    citasIniciales = []\n  }\n  \n  //citas\n  const [citas, setCitas] = useState(citasIniciales)\n  \n  //gestionar el state\n  useEffect(() => {\n    let citasIniciales = JSON.parse( localStorage.getItem('citas') )\n    if (citasIniciales) {\n      localStorage.setItem('citas', JSON.stringify(citas))\n    }else {\n      localStorage.setItem('citas', JSON.stringify([]))\n    }\n\n  }, [citas])\n\n  //function que toma las citas actualues y agrega la nueva\n  const crearCita = (cita) => {\n    setCitas([\n      ...citas,\n      cita\n    ])\n  }\n\n  //funcion que elmina una cita por id\n  const eliminarCita = (id) => {\n    const nuevasCitas = citas.filter( cita => cita.id !== id)    \n    setCitas(nuevasCitas)\n  }\n\n  //mensaje si hay citas\n  const titulo = citas.length === 0 ? 'No hay citas, crea una' : 'Administra tus citas'\n\n  return (\n    <>\n      <h1> Administrador de Pacientes</h1>\n\n      <div className='container'>\n        <div className='row'>\n          <div className='one-half column'>\n            <Formulario \n              crearCita={crearCita}\n            />\n          </div>\n          <div className='one-half column'>\n            <h2>{titulo}</h2>\n            {citas.map((cita) => {\n              return (\n                <Cita \n                  key={cita.id}\n                  cita={cita}\n                  eliminarCita={eliminarCita}\n                />\n              )\n            })}\n          </div>\n        </div>\n      </div>\n    </>\n  );\n}\n\n\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}